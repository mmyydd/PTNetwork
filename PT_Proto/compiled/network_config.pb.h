// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: network_config.proto

#ifndef PROTOBUF_network_5fconfig_2eproto__INCLUDED
#define PROTOBUF_network_5fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_network_5fconfig_2eproto();
void protobuf_AssignDesc_network_5fconfig_2eproto();
void protobuf_ShutdownFile_network_5fconfig_2eproto();

class network_config;

// ===================================================================

class network_config : public ::google::protobuf::Message {
 public:
  network_config();
  virtual ~network_config();

  network_config(const network_config& from);

  inline network_config& operator=(const network_config& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const network_config& default_instance();

  void Swap(network_config* other);

  // implements Message ----------------------------------------------

  network_config* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const network_config& from);
  void MergeFrom(const network_config& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 port = 1;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 1;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // required int32 number_of_conn = 2;
  inline bool has_number_of_conn() const;
  inline void clear_number_of_conn();
  static const int kNumberOfConnFieldNumber = 2;
  inline ::google::protobuf::int32 number_of_conn() const;
  inline void set_number_of_conn(::google::protobuf::int32 value);

  // required int32 keep_time = 3;
  inline bool has_keep_time() const;
  inline void clear_keep_time();
  static const int kKeepTimeFieldNumber = 3;
  inline ::google::protobuf::int32 keep_time() const;
  inline void set_keep_time(::google::protobuf::int32 value);

  // required bool is_enable_cache = 4;
  inline bool has_is_enable_cache() const;
  inline void clear_is_enable_cache();
  static const int kIsEnableCacheFieldNumber = 4;
  inline bool is_enable_cache() const;
  inline void set_is_enable_cache(bool value);

  // required int32 cache_count = 5;
  inline bool has_cache_count() const;
  inline void clear_cache_count();
  static const int kCacheCountFieldNumber = 5;
  inline ::google::protobuf::int32 cache_count() const;
  inline void set_cache_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:network_config)
 private:
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_number_of_conn();
  inline void clear_has_number_of_conn();
  inline void set_has_keep_time();
  inline void clear_has_keep_time();
  inline void set_has_is_enable_cache();
  inline void clear_has_is_enable_cache();
  inline void set_has_cache_count();
  inline void clear_has_cache_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 number_of_conn_;
  ::google::protobuf::int32 keep_time_;
  bool is_enable_cache_;
  ::google::protobuf::int32 cache_count_;
  friend void  protobuf_AddDesc_network_5fconfig_2eproto();
  friend void protobuf_AssignDesc_network_5fconfig_2eproto();
  friend void protobuf_ShutdownFile_network_5fconfig_2eproto();

  void InitAsDefaultInstance();
  static network_config* default_instance_;
};
// ===================================================================


// ===================================================================

// network_config

// required int32 port = 1;
inline bool network_config::has_port() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void network_config::set_has_port() {
  _has_bits_[0] |= 0x00000001u;
}
inline void network_config::clear_has_port() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void network_config::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 network_config::port() const {
  // @@protoc_insertion_point(field_get:network_config.port)
  return port_;
}
inline void network_config::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:network_config.port)
}

// required int32 number_of_conn = 2;
inline bool network_config::has_number_of_conn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void network_config::set_has_number_of_conn() {
  _has_bits_[0] |= 0x00000002u;
}
inline void network_config::clear_has_number_of_conn() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void network_config::clear_number_of_conn() {
  number_of_conn_ = 0;
  clear_has_number_of_conn();
}
inline ::google::protobuf::int32 network_config::number_of_conn() const {
  // @@protoc_insertion_point(field_get:network_config.number_of_conn)
  return number_of_conn_;
}
inline void network_config::set_number_of_conn(::google::protobuf::int32 value) {
  set_has_number_of_conn();
  number_of_conn_ = value;
  // @@protoc_insertion_point(field_set:network_config.number_of_conn)
}

// required int32 keep_time = 3;
inline bool network_config::has_keep_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void network_config::set_has_keep_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void network_config::clear_has_keep_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void network_config::clear_keep_time() {
  keep_time_ = 0;
  clear_has_keep_time();
}
inline ::google::protobuf::int32 network_config::keep_time() const {
  // @@protoc_insertion_point(field_get:network_config.keep_time)
  return keep_time_;
}
inline void network_config::set_keep_time(::google::protobuf::int32 value) {
  set_has_keep_time();
  keep_time_ = value;
  // @@protoc_insertion_point(field_set:network_config.keep_time)
}

// required bool is_enable_cache = 4;
inline bool network_config::has_is_enable_cache() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void network_config::set_has_is_enable_cache() {
  _has_bits_[0] |= 0x00000008u;
}
inline void network_config::clear_has_is_enable_cache() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void network_config::clear_is_enable_cache() {
  is_enable_cache_ = false;
  clear_has_is_enable_cache();
}
inline bool network_config::is_enable_cache() const {
  // @@protoc_insertion_point(field_get:network_config.is_enable_cache)
  return is_enable_cache_;
}
inline void network_config::set_is_enable_cache(bool value) {
  set_has_is_enable_cache();
  is_enable_cache_ = value;
  // @@protoc_insertion_point(field_set:network_config.is_enable_cache)
}

// required int32 cache_count = 5;
inline bool network_config::has_cache_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void network_config::set_has_cache_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void network_config::clear_has_cache_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void network_config::clear_cache_count() {
  cache_count_ = 0;
  clear_has_cache_count();
}
inline ::google::protobuf::int32 network_config::cache_count() const {
  // @@protoc_insertion_point(field_get:network_config.cache_count)
  return cache_count_;
}
inline void network_config::set_cache_count(::google::protobuf::int32 value) {
  set_has_cache_count();
  cache_count_ = value;
  // @@protoc_insertion_point(field_set:network_config.cache_count)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_network_5fconfig_2eproto__INCLUDED
