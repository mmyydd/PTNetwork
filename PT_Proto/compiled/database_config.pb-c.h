/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: database_config.proto */

#ifndef PROTOBUF_C_database_5fconfig_2eproto__INCLUDED
#define PROTOBUF_C_database_5fconfig_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _DatabaseNode DatabaseNode;
typedef struct _DatabaseConfig DatabaseConfig;


/* --- enums --- */


/* --- messages --- */

struct  _DatabaseNode
{
  ProtobufCMessage base;
  /*
   *标记名称
   */
  char *name;
  /*
   *地址
   */
  char *address;
  /*
   *端口
   */
  int32_t port;
  /*
   *用户名
   */
  char *username;
  /*
   *密码
   */
  char *password;
  /*
   *数据库名称
   */
  char *dbname;
};
#define DATABASE_NODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&database_node__descriptor) \
    , NULL, NULL, 0, NULL, NULL, NULL }


struct  _DatabaseConfig
{
  ProtobufCMessage base;
  size_t n_databases;
  DatabaseNode **databases;
};
#define DATABASE_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&database_config__descriptor) \
    , 0,NULL }


/* DatabaseNode methods */
void   database_node__init
                     (DatabaseNode         *message);
size_t database_node__get_packed_size
                     (const DatabaseNode   *message);
size_t database_node__pack
                     (const DatabaseNode   *message,
                      uint8_t             *out);
size_t database_node__pack_to_buffer
                     (const DatabaseNode   *message,
                      ProtobufCBuffer     *buffer);
DatabaseNode *
       database_node__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   database_node__free_unpacked
                     (DatabaseNode *message,
                      ProtobufCAllocator *allocator);
/* DatabaseConfig methods */
void   database_config__init
                     (DatabaseConfig         *message);
size_t database_config__get_packed_size
                     (const DatabaseConfig   *message);
size_t database_config__pack
                     (const DatabaseConfig   *message,
                      uint8_t             *out);
size_t database_config__pack_to_buffer
                     (const DatabaseConfig   *message,
                      ProtobufCBuffer     *buffer);
DatabaseConfig *
       database_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   database_config__free_unpacked
                     (DatabaseConfig *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DatabaseNode_Closure)
                 (const DatabaseNode *message,
                  void *closure_data);
typedef void (*DatabaseConfig_Closure)
                 (const DatabaseConfig *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor database_node__descriptor;
extern const ProtobufCMessageDescriptor database_config__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_database_5fconfig_2eproto__INCLUDED */
